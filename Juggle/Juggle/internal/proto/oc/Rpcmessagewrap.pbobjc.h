// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: rpcmessagewrap.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RpcMsgType

typedef GPB_ENUM(RpcMsgType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RpcMsgType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RpcMsgType_UserPub = 0,
  RpcMsgType_UserPubAck = 1,
  RpcMsgType_ServerPub = 2,
  RpcMsgType_ServerPubAck = 3,
  RpcMsgType_QueryMsg = 4,
  RpcMsgType_QueryAck = 5,
  RpcMsgType_QueryConfirm = 6,
};

GPBEnumDescriptor *RpcMsgType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RpcMsgType_IsValidValue(int32_t value);

#pragma mark - RpcmessagewrapRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface RpcmessagewrapRoot : GPBRootObject
@end

#pragma mark - RpcMessageWraper

typedef GPB_ENUM(RpcMessageWraper_FieldNumber) {
  RpcMessageWraper_FieldNumber_RpcMsgType = 1,
  RpcMessageWraper_FieldNumber_AppKey = 2,
  RpcMessageWraper_FieldNumber_Session = 3,
  RpcMessageWraper_FieldNumber_Method = 4,
  RpcMessageWraper_FieldNumber_TargetId = 5,
  RpcMessageWraper_FieldNumber_SourceMethod = 6,
  RpcMessageWraper_FieldNumber_RequesterId = 7,
  RpcMessageWraper_FieldNumber_Qos = 8,
  RpcMessageWraper_FieldNumber_ReqIndex = 9,
  RpcMessageWraper_FieldNumber_PublishType = 10,
  RpcMessageWraper_FieldNumber_IsFromApi = 11,
  RpcMessageWraper_FieldNumber_ExtParams = 12,
  RpcMessageWraper_FieldNumber_TerminalNum = 13,
  RpcMessageWraper_FieldNumber_ResultCode = 21,
  RpcMessageWraper_FieldNumber_MsgSendTime = 22,
  RpcMessageWraper_FieldNumber_MsgId = 23,
  RpcMessageWraper_FieldNumber_GroupId = 31,
  RpcMessageWraper_FieldNumber_TargetIdsArray = 32,
  RpcMessageWraper_FieldNumber_AppDataBytes = 50,
};

GPB_FINAL @interface RpcMessageWraper : GPBMessage

@property(nonatomic, readwrite) RpcMsgType rpcMsgType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *session;

@property(nonatomic, readwrite, copy, null_resettable) NSString *method;

@property(nonatomic, readwrite, copy, null_resettable) NSString *targetId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceMethod;

@property(nonatomic, readwrite, copy, null_resettable) NSString *requesterId;

@property(nonatomic, readwrite) int32_t qos;

@property(nonatomic, readwrite) int32_t reqIndex;

@property(nonatomic, readwrite) int32_t publishType;

@property(nonatomic, readwrite) BOOL isFromApi;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *extParams;
/** The number of items in @c extParams without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger extParams_Count;

@property(nonatomic, readwrite) int32_t terminalNum;

@property(nonatomic, readwrite) int32_t resultCode;

@property(nonatomic, readwrite) int64_t msgSendTime;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msgId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *targetIdsArray;
/** The number of items in @c targetIdsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger targetIdsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *appDataBytes;

@end

/**
 * Fetches the raw value of a @c RpcMessageWraper's @c rpcMsgType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RpcMessageWraper_RpcMsgType_RawValue(RpcMessageWraper *message);
/**
 * Sets the raw value of an @c RpcMessageWraper's @c rpcMsgType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRpcMessageWraper_RpcMsgType_RawValue(RpcMessageWraper *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
