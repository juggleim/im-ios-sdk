// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: message.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import <stdatomic.h>

#import "Message.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(DownstreamMsg);
GPBObjCClassDeclaration(UpstreamMsg);

#pragma mark - MessageRoot

@implementation MessageRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription MessageRoot_FileDescription = {
  .package = "message",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - Enum ConversationType

GPBEnumDescriptor *ConversationType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static const char *valueNames =
        "None\000Private\000Secret\000Group\000System\000";
    static const int32_t values[] = {
        ConversationType_None,
        ConversationType_Private,
        ConversationType_Secret,
        ConversationType_Group,
        ConversationType_System,
    };
    static const char *extraTextFormatInfo = "\005\000\004\000\001\007\000\002\006\000\003\005\000\004\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ConversationType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ConversationType_IsValidValue
                                            flags:GPBEnumDescriptorInitializationFlag_None
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ConversationType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ConversationType_None:
    case ConversationType_Private:
    case ConversationType_Secret:
    case ConversationType_Group:
    case ConversationType_System:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UpstreamMsg

@implementation UpstreamMsg

@dynamic targetId;
@dynamic conversationType;
@dynamic msgType;
@dynamic msgContent;
@dynamic msgFlag;
@dynamic msgExtra;
@dynamic pushContent;

typedef struct UpstreamMsg__storage_ {
  uint32_t _has_storage_[1];
  ConversationType conversationType;
  int32_t msgFlag;
  NSString *targetId;
  NSString *msgType;
  NSString *msgContent;
  NSString *msgExtra;
  NSString *pushContent;
} UpstreamMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "targetId",
        .dataTypeSpecific.clazz = Nil,
        .number = UpstreamMsg_FieldNumber_TargetId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UpstreamMsg__storage_, targetId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "conversationType",
        .dataTypeSpecific.enumDescFunc = ConversationType_EnumDescriptor,
        .number = UpstreamMsg_FieldNumber_ConversationType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UpstreamMsg__storage_, conversationType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.clazz = Nil,
        .number = UpstreamMsg_FieldNumber_MsgType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UpstreamMsg__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgContent",
        .dataTypeSpecific.clazz = Nil,
        .number = UpstreamMsg_FieldNumber_MsgContent,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UpstreamMsg__storage_, msgContent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = UpstreamMsg_FieldNumber_MsgFlag,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UpstreamMsg__storage_, msgFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msgExtra",
        .dataTypeSpecific.clazz = Nil,
        .number = UpstreamMsg_FieldNumber_MsgExtra,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UpstreamMsg__storage_, msgExtra),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pushContent",
        .dataTypeSpecific.clazz = Nil,
        .number = UpstreamMsg_FieldNumber_PushContent,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UpstreamMsg__storage_, pushContent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(UpstreamMsg)
                                   messageName:@"UpstreamMsg"
                               fileDescription:&MessageRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UpstreamMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\007\001\010\000\002\020\000\003\007\000\004\n\000\005\007\000\006\010\000\007\013\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UpstreamMsg_ConversationType_RawValue(UpstreamMsg *message) {
  GPBDescriptor *descriptor = [UpstreamMsg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UpstreamMsg_FieldNumber_ConversationType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetUpstreamMsg_ConversationType_RawValue(UpstreamMsg *message, int32_t value) {
  GPBDescriptor *descriptor = [UpstreamMsg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UpstreamMsg_FieldNumber_ConversationType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - DownstreamMsg

@implementation DownstreamMsg

@dynamic fromId;
@dynamic conversationType;
@dynamic msgType;
@dynamic msgContent;
@dynamic msgFlag;
@dynamic msgExtra;
@dynamic pushContent;
@dynamic msgStatus;

typedef struct DownstreamMsg__storage_ {
  uint32_t _has_storage_[1];
  ConversationType conversationType;
  int32_t msgFlag;
  int32_t msgStatus;
  NSString *fromId;
  NSString *msgType;
  NSString *msgContent;
  NSString *msgExtra;
  NSString *pushContent;
} DownstreamMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fromId",
        .dataTypeSpecific.clazz = Nil,
        .number = DownstreamMsg_FieldNumber_FromId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DownstreamMsg__storage_, fromId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "conversationType",
        .dataTypeSpecific.enumDescFunc = ConversationType_EnumDescriptor,
        .number = DownstreamMsg_FieldNumber_ConversationType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DownstreamMsg__storage_, conversationType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.clazz = Nil,
        .number = DownstreamMsg_FieldNumber_MsgType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DownstreamMsg__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgContent",
        .dataTypeSpecific.clazz = Nil,
        .number = DownstreamMsg_FieldNumber_MsgContent,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DownstreamMsg__storage_, msgContent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = DownstreamMsg_FieldNumber_MsgFlag,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DownstreamMsg__storage_, msgFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msgExtra",
        .dataTypeSpecific.clazz = Nil,
        .number = DownstreamMsg_FieldNumber_MsgExtra,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DownstreamMsg__storage_, msgExtra),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pushContent",
        .dataTypeSpecific.clazz = Nil,
        .number = DownstreamMsg_FieldNumber_PushContent,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(DownstreamMsg__storage_, pushContent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgStatus",
        .dataTypeSpecific.clazz = Nil,
        .number = DownstreamMsg_FieldNumber_MsgStatus,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(DownstreamMsg__storage_, msgStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(DownstreamMsg)
                                   messageName:@"DownstreamMsg"
                               fileDescription:&MessageRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DownstreamMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
      static const char *extraTextFormatInfo =
        "\010\001\006\000\002\020\000\003\007\000\004\n\000\005\007\000\006\010\000\007\013\000\010\t\000";
      [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
    #endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t DownstreamMsg_ConversationType_RawValue(DownstreamMsg *message) {
  GPBDescriptor *descriptor = [DownstreamMsg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:DownstreamMsg_FieldNumber_ConversationType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetDownstreamMsg_ConversationType_RawValue(DownstreamMsg *message, int32_t value) {
  GPBDescriptor *descriptor = [DownstreamMsg descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:DownstreamMsg_FieldNumber_ConversationType];
  GPBSetMessageRawEnumField(message, field, value);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
